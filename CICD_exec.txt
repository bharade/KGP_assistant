name: CI/CD for AcademiaAI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/kgp_assistant/academiaai
          docker build -t $IMAGE_NAME:latest .

      - name: Push Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/kgp_assistant/academiaai
          docker push $IMAGE_NAME:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Pull latest image
            docker pull ghcr.io/${{ github.repository_owner }}/kgp_assistant/academiaai:latest

            # Stop & remove old container if exists
            if [ "$(docker ps -aq -f name=academiaai)" ]; then
                docker stop academiaai
                docker rm academiaai
            fi

            # Ensure .env exists (create if not)
            cat > ~/.env <<EOL
GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}
TAVILY_API_KEY=${{ secrets.TAVILY_API_KEY }}
EOL

            # Run the container
            docker run -d --name academiaai -p 80:8501 --env-file ~/.env \
                ghcr.io/${{ github.repository_owner }}/kgp_assistant/academiaai:latest
